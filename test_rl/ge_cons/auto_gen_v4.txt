{
    "0": [
        1767.7467758655548,
        "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun y () (_ BitVec 32))\n(declare-fun x () (_ BitVec 32))\n(declare-fun z () (_ BitVec 32))\n(assert\n (let ((?x37 (bvxor x (bvadd (bvmul y z) (bvsmod (bvmul z (_ bv57 32)) (bvadd x (_ bv2 32)))))))\n (= (bvsmod (bvmul ?x37 (bvand y (bvor x z))) (_ bv1024 32)) (bvsmod (bvmul x y) (_ bv511 32)))))\n(assert\n (ite (= (_ bv128 32) (bvsmod (bvadd x y) (_ bv256 32))) (= (_ bv15 32) (bvsmod (bvmul z (bvadd x y)) (_ bv97 32))) (= (_ bv42 32) (bvsmod (bvmul z (bvsub x y)) (_ bv97 32)))))\n(assert\n (let ((?x114 (bvmul (bvsmod (bvmul (bvmul x y) z) (bvadd x (_ bv1 32))) (bvadd (bvxor x y) (bvashr z (_ bv1 32))))))\n (bvslt (_ bv5000 32) ?x114)))\n(assert\n (ite (= (_ bv123456 32) x) (= (_ bv1253456 32) (bvadd (bvadd x y) z)) (bvslt (_ bv1000000 32) (bvadd (bvadd x y) z))))\n(assert\n (let ((?x150 (bvmul (bvsmod (bvmul (bvmul x y) z) (bvadd (bvmul x y) (_ bv1 32))) (bvsmod (bvxor z (bvadd x y)) (_ bv97 32)))))\n (= ?x150 (_ bv0 32))))\n(assert\n (let ((?x92 (bvmul x z)))\n (let ((?x190 (bvsmod ?x92 (bvsmod (bvmul x x) (bvadd (bvsub x (bvmul (_ bv7 32) y)) z)))))\n (let ((?x164 (bvmul (bvand (bvxor (bvmul x (_ bv6 32)) (bvashr x (_ bv2 32))) (_ bv255 32)) (bvsmod (bvor x (_ bv3 32)) (_ bv73 32)))))\n (let ((?x169 (bvsdiv (bvsmod (bvadd ?x164 (bvshl (bvand x (_ bv31 32)) (_ bv3 32))) (_ bv71 32)) (_ bv2 32))))\n (let ((?x196 (bvmul (bvmul (bvmul (bvmul ?x169 ?x169) z) ?x190) (bvsmod (bvmul z (bvsmod (bvmul x (_ bv12 32)) (_ bv7 32))) (_ bv8 32)))))\n (let ((?x182 (bvmul y y)))\n (let ((?x177 (bvsmod (bvmul (bvmul (bvmul x x) y) z) (bvsmod (bvmul (bvmul x y) (_ bv12 32)) (bvadd (bvsmod x y) z)))))\n (let ((?x183 (bvadd (bvmul ?x177 (bvsmod ?x92 (bvsmod (bvmul x (_ bv128 32)) (_ bv7 32)))) ?x182)))\n (= ?x183 (bvmul ?x196 (bvsmod (bvmul x (_ bv3 32)) (bvsmod (bvmul x (_ bv128 32)) (_ bv7 32))))))))))))))\n(check-sat)\n"
    ],
    "1": [
        4255.442565917969,
        "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun y () (_ BitVec 32))\n(declare-fun x () (_ BitVec 32))\n(declare-fun z () (_ BitVec 32))\n(assert\n (let ((?x37 (bvxor x (bvadd (bvmul y z) (bvsmod (bvmul z (_ bv57 32)) (bvadd x (_ bv2 32)))))))\n (= (bvsmod (bvmul ?x37 (bvand y (bvor x z))) (_ bv1024 32)) (bvsmod (bvmul x y) (_ bv511 32)))))\n(assert\n (ite (= (_ bv128 32) (bvsmod (bvadd x y) (_ bv256 32))) (= (_ bv15 32) (bvsmod (bvmul z (bvadd x y)) (_ bv97 32))) (= (_ bv42 32) (bvsmod (bvmul z (bvsub x y)) (_ bv97 32)))))\n(assert\n (let ((?x114 (bvmul (bvsmod (bvmul (bvmul x y) z) (bvadd x (_ bv1 32))) (bvadd (bvxor x y) (bvashr z (_ bv1 32))))))\n (bvslt (_ bv5000 32) ?x114)))\n(assert\n (ite (= (_ bv123456 32) x) (= (_ bv1253456 32) (bvadd (bvadd x y) z)) (bvslt (_ bv1000000 32) (bvadd (bvadd x y) z))))\n(assert\n (let ((?x150 (bvmul (bvsmod (bvmul (bvmul x y) z) (bvadd (bvmul x y) (_ bv2 32))) (bvsmod (bvxor z (bvadd x y)) (_ bv97 32)))))\n (= ?x150 (_ bv0 32))))\n(assert\n (let ((?x92 (bvmul x z)))\n (let ((?x190 (bvsmod ?x92 (bvsmod (bvmul x x) (bvadd (bvsub x (bvmul (_ bv7 32) y)) z)))))\n (let ((?x164 (bvmul (bvand (bvxor (bvmul x (_ bv6 32)) (bvashr x (_ bv2 32))) (_ bv255 32)) (bvsmod (bvor x (_ bv3 32)) (_ bv73 32)))))\n (let ((?x169 (bvsdiv (bvsmod (bvadd ?x164 (bvshl (bvand x (_ bv31 32)) (_ bv3 32))) (_ bv71 32)) (_ bv2 32))))\n (let ((?x196 (bvmul (bvmul (bvmul (bvmul ?x169 ?x169) z) ?x190) (bvsmod (bvmul z (bvsmod (bvmul x (_ bv12 32)) (_ bv7 32))) (_ bv8 32)))))\n (let ((?x182 (bvmul y y)))\n (let ((?x177 (bvsmod (bvmul (bvmul (bvmul x x) y) z) (bvsmod (bvmul (bvmul x y) (_ bv12 32)) (bvadd (bvsmod x y) z)))))\n (let ((?x183 (bvadd (bvmul ?x177 (bvsmod ?x92 (bvsmod (bvmul x (_ bv128 32)) (_ bv7 32)))) ?x182)))\n (= ?x183 (bvmul ?x196 (bvsmod (bvmul x (_ bv3 32)) (bvsmod (bvmul x (_ bv128 32)) (_ bv7 32))))))))))))))\n(check-sat)\n"
    ],
    "2": [
        12000.063895225525,
        "; benchmark generated from python API\n(set-info :status unknown)\n(declare-fun z () (_ BitVec 32))\n(declare-fun y () (_ BitVec 32))\n(declare-fun x () (_ BitVec 32))\n(assert\n (let ((?x112 (bvmul x y z)))\n (let ((?x113 (bvsmod ?x112 (_ bv1023 32))))\n (let ((?x90 (bvsmod z (bvadd (_ bv3 32) y))))\n (let ((?x442 (bvadd (bvmul (bvadd x (bvmul (_ bv4294967295 32) y)) (bvadd x (bvxor y z))) ?x90)))\n (let ((?x413 (bvsmod (bvmul ?x442 (bvor x (bvnot (bvor (bvnot z) (bvnot y))))) (_ bv2048 32))))\n (= ?x413 ?x113)))))))\n(assert\n (let (($x141 (= (bvsmod (bvxor x y z) (_ bv89 32)) (_ bv77 32))))\n (let (($x128 (= (bvsmod (bvmul x z) (_ bv512 32)) (_ bv256 32))))\n (ite $x128 (= (bvsmod (bvmul y (bvadd x (bvmul (_ bv4294967295 32) z))) (_ bv89 32)) (_ bv22 32)) $x141))))\n(assert\n (let ((?x160 (bvmul (bvsmod (bvor x y z) (bvadd (_ bv2 32) x y)) (bvxor (bvnot (bvor (bvnot x) (bvnot y))) (bvashr z (_ bv2 32))))))\n (not (bvsle (_ bv10000 32) ?x160))))\n(assert\n (let (($x182 (not (bvsle (bvmul x y z) (_ bv500000 32)))))\n (let ((?x75 (bvmul (_ bv4294967295 32) y)))\n (let ((?x179 (bvadd (_ bv4294756419 32) ?x75 z)))\n (let (($x180 (= x ?x179)))\n (ite (= x (_ bv654321 32)) $x180 $x182))))))\n(assert\n (let ((?x134 (bvmul y z)))\n (let ((?x184 (bvxor x ?x134)))\n (let ((?x197 (bvsmod ?x184 (bvadd (_ bv2 32) y z))))\n (let ((?x201 (bvnot (bvor (bvnot (bvor x z)) (bvnot (bvashr y (_ bv26 32)))))))\n (= (bvsmod (bvmul ?x201 ?x197) (_ bv4096 32)) (bvsmod (bvadd (bvmul x z) (bvxor y z)) (_ bv1024 32))))))))\n(assert\n (let ((?x304 ((_ extract 5 0) z)))\n (let ((?x321 (concat (_ bv0 24) ?x304 (_ bv0 2))))\n (let ((?x443 (concat (_ bv0 24) (bvxor (bvmul (_ bv7 8) ((_ extract 7 0) x)) ((_ extract 7 0) (bvashr z (_ bv5 32)))))))\n (let ((?x298 (concat ((_ extract 31 4) z) (_ bv1 1) ((_ extract 2 1) z) (_ bv1 1))))\n (let ((?x299 (bvsmod ?x298 (_ bv53 32))))\n (let ((?x372 ((_ extract 1 1) x)))\n (let ((?x366 ((_ extract 4 3) x)))\n (let ((?x389 (concat (_ bv0 23) ?x366 (_ bv0 1) ?x372 (_ bv0 5))))\n (let ((?x469 (concat (_ bv0 24) (bvxor ((_ extract 7 5) (bvmul (_ bv6 32) y)) ((_ extract 7 5) (bvashr x (_ bv2 32)))) (_ bv0 1) (bvxor (bvmul (_ bv6 4) ((_ extract 3 0) y)) ((_ extract 3 0) (bvashr x (_ bv2 32)))))))\n (let ((?x360 (concat ((_ extract 31 3) y) (_ bv7 3))))\n (let ((?x361 (bvsmod ?x360 (_ bv97 32))))\n (let ((?x404 (bvsmod (bvmul x (bvsmod (bvmul (_ bv5 32) z) (_ bv9 32))) (_ bv10 32))))\n (let ((?x134 (bvmul y z)))\n (let ((?x477 (bvsmod ?x134 (bvsmod (bvmul x y) (bvadd x (bvmul (_ bv4294967291 32) z) y)))))\n (let ((?x408 (bvsmod (bvmul (_ bv2 32) y) (bvsmod (bvmul (_ bv99 32) y) (_ bv11 32)))))\n (let ((?x478 (bvmul z ?x408 ?x477 ?x404 (bvsdiv_i (bvsmod (bvadd (bvmul ?x361 ?x469) ?x389) (_ bv73 32)) (_ bv2 32)) (bvsdiv_i (bvsmod (bvadd (bvmul ?x299 ?x443) ?x321) (_ bv67 32)) (_ bv2 32)))))\n (let ((?x217 (bvmul z z)))\n (let ((?x214 (bvashr z (_ bv5 32))))\n (let ((?x158 (bvnot (bvor (bvnot x) (bvnot y)))))\n (let ((?x266 (bvxor ?x158 ?x214)))\n (let ((?x261 (bvmul x x z)))\n (let ((?x426 (bvmul (bvsmod ?x261 (bvsmod (bvmul (_ bv5 32) y) (bvadd z x))) ?x266)))\n (= (bvadd ?x426 ?x217) ?x478))))))))))))))))))))))))\n(check-sat)\n"
    ]
}